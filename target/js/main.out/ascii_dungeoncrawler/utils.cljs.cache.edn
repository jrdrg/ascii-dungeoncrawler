;; Analyzed by ClojureScript 1.7.170
{:name ascii-dungeoncrawler.utils, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {clamp {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/utils.cljs", :line 4, :column 7, :end-line 4, :end-column 12, :arglists (quote ([val min max]))}, :name ascii-dungeoncrawler.utils/clamp, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/utils.cljs", :end-column 12, :method-params ([val min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([val min max]))}, add-vectors {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/utils.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max])), :doc "Adds two [x y] vectors. Optionally, clamps the values between -max and +max.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :arglists ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.utils/add-vectors, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/utils.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :arglists ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :arglists-meta (nil nil)}, :method-params ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists ([[x1 y1] [x2 y2]] [[x1 y1] [x2 y2] max]), :doc "Adds two [x y] vectors. Optionally, clamps the values between -max and +max."}}}