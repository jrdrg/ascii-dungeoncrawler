;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name ascii-dungeoncrawler.systems.sprite, :imports nil, :requires {ascii-dungeoncrawler.constants ascii-dungeoncrawler.constants, pixi ascii-dungeoncrawler.pixi, ascii-dungeoncrawler.pixi ascii-dungeoncrawler.pixi, ecs ascii-dungeoncrawler.ecs, ascii-dungeoncrawler.ecs ascii-dungeoncrawler.ecs}, :uses {img-path ascii-dungeoncrawler.constants, tile-size ascii-dungeoncrawler.constants}, :defs {mk-sprite-system {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 100, :column 7, :end-line 100, :end-column 23, :arglists (quote ([renderer stage])), :doc "Main system function. Handles drawing sprites (and text) to the pixi stage."}, :name ascii-dungeoncrawler.systems.sprite/mk-sprite-system, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 23, :method-params ([renderer stage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([renderer stage])), :doc "Main system function. Handles drawing sprites (and text) to the pixi stage."}, char-coords {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([index])), :doc "Returns the 2-d coordinates given the index"}, :name ascii-dungeoncrawler.systems.sprite/char-coords, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 18, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index])), :doc "Returns the 2-d coordinates given the index"}, character-positions {:name ascii-dungeoncrawler.systems.sprite/character-positions, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 9, :column 1, :end-line 9, :end-column 25, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 9, :column 6, :end-line 9, :end-column 25}}, tiles-per-row {:name ascii-dungeoncrawler.systems.sprite/tiles-per-row, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 6, :column 1, :end-line 6, :end-column 19, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 6, :column 6, :end-line 6, :end-column 19}}, mk-update-sprite-component-data {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 79, :column 7, :end-line 79, :end-column 38, :arglists (quote ([stage])), :doc "Returns a function to update the sprite component data."}, :name ascii-dungeoncrawler.systems.sprite/mk-update-sprite-component-data, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 38, :method-params ([stage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stage])), :doc "Returns a function to update the sprite component data."}, sprite-from-texture! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 21, :column 7, :end-line 21, :end-column 27, :arglists (quote ([sprite-texture x y tile-size] [sprite-texture x y w h])), :doc "Creates a sprite from sprite-texture with the given frame rectangle.", :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([sprite-texture x y tile-size] [sprite-texture x y w h]), :arglists ([sprite-texture x y tile-size] [sprite-texture x y w h]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.systems.sprite/sprite-from-texture!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([sprite-texture x y tile-size] [sprite-texture x y w h]), :arglists ([sprite-texture x y tile-size] [sprite-texture x y w h]), :arglists-meta (nil nil)}, :method-params ([sprite-texture x y tile-size] [sprite-texture x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 5, :fn-var true, :arglists ([sprite-texture x y tile-size] [sprite-texture x y w h]), :doc "Creates a sprite from sprite-texture with the given frame rectangle."}, init-text-sprites! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 43, :column 7, :end-line 43, :end-column 25, :arglists (quote ([renderer stage])), :doc "Renders all alphanumeric characters to a texture for use as sprites"}, :name ascii-dungeoncrawler.systems.sprite/init-text-sprites!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 25, :method-params ([renderer stage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([renderer stage])), :doc "Renders all alphanumeric characters to a texture for use as sprites"}, character-range {:name ascii-dungeoncrawler.systems.sprite/character-range, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 7, :column 1, :end-line 7, :end-column 21, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 7, :column 6, :end-line 7, :end-column 21}}, generate-base-texture! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 34, :column 7, :end-line 34, :end-column 29, :arglists (quote ([renderer])), :doc "Creates a texture with all required alphanumeric symbols and returns it"}, :name ascii-dungeoncrawler.systems.sprite/generate-base-texture!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 29, :method-params ([renderer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([renderer])), :doc "Creates a texture with all required alphanumeric symbols and returns it"}, mk-update-text-component-data {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 89, :column 7, :end-line 89, :end-column 36, :arglists (quote ([stage]))}, :name ascii-dungeoncrawler.systems.sprite/mk-update-text-component-data, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 36, :method-params ([stage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stage]))}, ascii-symbols {:name ascii-dungeoncrawler.systems.sprite/ascii-symbols, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 8, :column 6, :end-line 8, :end-column 19}}, component->sprite! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :line 66, :column 7, :end-line 66, :end-column 25, :arglists (quote ([stage {:keys [sprite char draw? color]} {position :pos}])), :doc "Moves a sprite's position based on its position component, and creates\n  a new sprite if it doesn't exist."}, :name ascii-dungeoncrawler.systems.sprite/component->sprite!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/sprite.cljs", :end-column 25, :method-params ([stage p__7464 p__7465]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([stage {:keys [sprite char draw? color]} {position :pos}])), :doc "Moves a sprite's position based on its position component, and creates\n  a new sprite if it doesn't exist."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :color :pos :sprite :components :draw? :position :x :char :text}, :order [:x :y :sprite :char :draw? :color :pos :position :text :components]}, :doc nil}