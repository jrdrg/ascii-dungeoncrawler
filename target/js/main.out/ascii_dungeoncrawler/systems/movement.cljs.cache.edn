;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name ascii-dungeoncrawler.systems.movement, :imports nil, :requires {ascii-dungeoncrawler.utils ascii-dungeoncrawler.utils, ecs ascii-dungeoncrawler.ecs, ascii-dungeoncrawler.ecs ascii-dungeoncrawler.ecs}, :uses {add-vectors ascii-dungeoncrawler.utils}, :defs {decrease-speed {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 21, :column 7, :end-line 21, :end-column 21, :arglists (quote ([velocity])), :doc "Decreases velocity by a certain percentage each frame."}, :name ascii-dungeoncrawler.systems.movement/decrease-speed, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 21, :method-params ([velocity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([velocity])), :doc "Decreases velocity by a certain percentage each frame."}, max-velocity {:name ascii-dungeoncrawler.systems.movement/max-velocity, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 10, :column 1, :end-line 10, :end-column 18, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 10, :column 6, :end-line 10, :end-column 18}}, movement-system {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 81, :column 7, :end-line 81, :end-column 22, :arglists (quote ([state])), :doc "System to handle moving entities based on input commands."}, :name ascii-dungeoncrawler.systems.movement/movement-system, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "System to handle moving entities based on input commands."}, update-position-component-data {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 51, :column 7, :end-line 51, :end-column 37, :arglists (quote ([component-map [entity-id [input-data {:keys [pos]} {:keys [velocity]}]]])), :doc "Given a position component map and a set of input data for an entity, returns a new\n  position component map with the entity's position updated to reflect that input data."}, :name ascii-dungeoncrawler.systems.movement/update-position-component-data, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 37, :method-params ([component-map p__7834]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component-map [entity-id [input-data {:keys [pos]} {:keys [velocity]}]]])), :doc "Given a position component map and a set of input data for an entity, returns a new\n  position component map with the entity's position updated to reflect that input data."}, speed {:name ascii-dungeoncrawler.systems.movement/speed, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 7, :column 6, :end-line 7, :end-column 11}}, mk-update-acceleration-fn {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 45, :column 7, :end-line 45, :end-column 32, :arglists (quote ([key]))}, :name ascii-dungeoncrawler.systems.movement/mk-update-acceleration-fn, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 32, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, new-velocity {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([vel accel]))}, :name ascii-dungeoncrawler.systems.movement/new-velocity, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 19, :method-params ([vel accel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vel accel]))}, new-position {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 29, :column 7, :end-line 29, :end-column 19, :arglists (quote ([pos vel]))}, :name ascii-dungeoncrawler.systems.movement/new-position, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 19, :method-params ([pos vel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos vel]))}, update-velocity-component-data {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 62, :column 7, :end-line 62, :end-column 37, :arglists (quote ([component-map [entity-id [input-data _ {:keys [velocity acceleration]}]]])), :doc "Given a velocity component map and a set of input data for an entity, returns a new\n  velocity component map with the entity's velocity updated to reflect that input data."}, :name ascii-dungeoncrawler.systems.movement/update-velocity-component-data, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 37, :method-params ([component-map p__7847]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component-map [entity-id [input-data _ {:keys [velocity acceleration]}]]])), :doc "Given a velocity component map and a set of input data for an entity, returns a new\n  velocity component map with the entity's velocity updated to reflect that input data."}, new-acceleration {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 39, :column 7, :end-line 39, :end-column 23, :arglists (quote ([[x y] key]))}, :name ascii-dungeoncrawler.systems.movement/new-acceleration, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :end-column 23, :method-params ([p__7831 key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] key]))}, movement-offsets {:name ascii-dungeoncrawler.systems.movement/movement-offsets, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 15, :column 1, :end-line 15, :end-column 22, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 15, :column 6, :end-line 15, :end-column 22}}, max-acceleration {:name ascii-dungeoncrawler.systems.movement/max-acceleration, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 11, :column 1, :end-line 11, :end-column 22, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 11, :column 6, :end-line 11, :end-column 22}}, slow-down {:name ascii-dungeoncrawler.systems.movement/slow-down, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/systems/movement.cljs", :line 13, :column 6, :end-line 13, :end-column 15}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:down :next-pos :pos :up :components :right :position :input :acceleration :velocity :left}, :order [:up :down :left :right :pos :velocity :next-pos :acceleration :input :position :components]}, :doc nil}