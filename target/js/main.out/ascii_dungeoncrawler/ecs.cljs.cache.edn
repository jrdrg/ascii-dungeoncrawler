;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name ascii-dungeoncrawler.ecs, :imports nil, :requires {clojure.set clojure.set}, :uses {intersection clojure.set}, :defs {add-component-to-entity {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 27, :column 7, :end-line 27, :end-column 30, :arglists (quote ([state entity-id [component-id component-state]]))}, :name ascii-dungeoncrawler.ecs/add-component-to-entity, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 30, :method-params ([state entity-id p__7368]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state entity-id [component-id component-state]]))}, state-component-path {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 6, :column 7, :end-line 6, :end-column 27, :arglists (quote ([component-id]))}, :name ascii-dungeoncrawler.ecs/state-component-path, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 27, :method-params ([component-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-id]))}, mk-add-entity-data-to-list {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 68, :column 7, :end-line 68, :end-column 33, :arglists (quote ([state component-ids optional-component-ids])), :doc "Returns a function which can be used to reduce a list of entity component data."}, :name ascii-dungeoncrawler.ecs/mk-add-entity-data-to-list, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 33, :method-params ([state component-ids optional-component-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state component-ids optional-component-ids])), :doc "Returns a function which can be used to reduce a list of entity component data."}, add-entity {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([state components] [state entity-id components])), :doc "Adds an entity with given id to state.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state components] [state entity-id components]), :arglists ([state components] [state entity-id components]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.ecs/add-entity, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state components] [state entity-id components]), :arglists ([state components] [state entity-id components]), :arglists-meta (nil nil)}, :method-params ([state components] [state entity-id components]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists ([state components] [state entity-id components]), :doc "Adds an entity with given id to state."}, get-component {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([state entity-id component-id]))}, :name ascii-dungeoncrawler.ecs/get-component, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 20, :method-params ([state entity-id component-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state entity-id component-id]))}, state-entity-path {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 11, :column 7, :end-line 11, :end-column 24, :arglists (quote ([entity-id]))}, :name ascii-dungeoncrawler.ecs/state-entity-path, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 24, :method-params ([entity-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entity-id]))}, entities-with-components {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 80, :column 7, :end-line 80, :end-column 31, :arglists (quote ([state component-ids] [state component-ids optional-component-ids])), :doc "Returns the ids and data of all entities that have all the requested components.\n  Loop through the first component's entities. For each entity, check if the id exists in all\n  the other component sets, if so then add a vector with data for each component in the\n  order requested.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state component-ids] [state component-ids optional-component-ids]), :arglists ([state component-ids] [state component-ids optional-component-ids]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.ecs/entities-with-components, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 31, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state component-ids] [state component-ids optional-component-ids]), :arglists ([state component-ids] [state component-ids optional-component-ids]), :arglists-meta (nil nil)}, :method-params ([state component-ids] [state component-ids optional-component-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 3, :fn-var true, :arglists ([state component-ids] [state component-ids optional-component-ids]), :doc "Returns the ids and data of all entities that have all the requested components.\n  Loop through the first component's entities. For each entity, check if the id exists in all\n  the other component sets, if so then add a vector with data for each component in the\n  order requested."}, remove-component-from-entity {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 36, :column 7, :end-line 36, :end-column 35, :arglists (quote ([state entity-id component-id]))}, :name ascii-dungeoncrawler.ecs/remove-component-from-entity, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 35, :method-params ([state entity-id component-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state entity-id component-id]))}, entity-has-component? {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 16, :column 7, :end-line 16, :end-column 28, :arglists (quote ([state entity-id component-id])), :doc "Returns true if the entity has the specified component."}, :name ascii-dungeoncrawler.ecs/entity-has-component?, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 28, :method-params ([state entity-id component-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state entity-id component-id])), :doc "Returns true if the entity has the specified component."}, rm-entity {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :line 57, :column 7, :end-line 57, :end-column 16, :arglists (quote ([state entity-id])), :doc "Removes the entity from state."}, :name ascii-dungeoncrawler.ecs/rm-entity, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/ecs.cljs", :end-column 16, :method-params ([state entity-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state entity-id])), :doc "Removes the entity from state."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:entities :components}, :order [:components :entities]}, :doc nil}