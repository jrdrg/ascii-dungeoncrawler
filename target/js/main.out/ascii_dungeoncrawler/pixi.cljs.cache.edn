;; Analyzed by ClojureScript 1.7.170
{:name ascii-dungeoncrawler.pixi, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {img-path ascii-dungeoncrawler.constants, tile-size ascii-dungeoncrawler.constants}, :requires {ascii-dungeoncrawler.constants ascii-dungeoncrawler.constants}, :imports nil, :defs {create-text! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 71, :column 7, :end-line 71, :end-column 19, :arglists (quote ([text [x y]] [text [x y] options])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([text [x y]] [text [x y] options]), :arglists ([text [x y]] [text [x y] options]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.pixi/create-text!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([text [x y]] [text [x y] options]), :arglists ([text [x y]] [text [x y] options]), :arglists-meta (nil nil)}, :method-params ([text [x y]] [text [x y] options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists ([text [x y]] [text [x y] options])}, textures {:name ascii-dungeoncrawler.pixi/textures, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 10, :column 1, :end-line 10, :end-column 18, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 10, :column 10, :end-line 10, :end-column 18}}, texture-from-cache {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 49, :column 7, :end-line 49, :end-column 25, :arglists (quote ([path])), :doc "Returns a texture from the TextureCache"}, :name ascii-dungeoncrawler.pixi/texture-from-cache, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 25, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :doc "Returns a texture from the TextureCache"}, change-color! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 62, :column 7, :end-line 62, :end-column 20, :arglists (quote ([sprite color]))}, :name ascii-dungeoncrawler.pixi/change-color!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 20, :method-params ([sprite color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sprite color]))}, load-images! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([done])), :doc "Loads the tileset image and calls done when complete. Stores a flag in an\n  atom so it doesn't load each time boot-reload triggers."}, :name ascii-dungeoncrawler.pixi/load-images!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 19, :method-params ([done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([done])), :doc "Loads the tileset image and calls done when complete. Stores a flag in an\n  atom so it doesn't load each time boot-reload triggers."}, tile-height {:name ascii-dungeoncrawler.pixi/tile-height, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 5, :column 1, :end-line 5, :end-column 17, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 5, :column 6, :end-line 5, :end-column 17}}, height {:name ascii-dungeoncrawler.pixi/height, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 8, :column 6, :end-line 8, :end-column 12}}, render! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 13, :column 7, :end-line 13, :end-column 14, :arglists (quote ([renderer stage]))}, :name ascii-dungeoncrawler.pixi/render!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 14, :method-params ([renderer stage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([renderer stage]))}, create-container! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 20, :column 7, :end-line 20, :end-column 24, :arglists (quote ([] [options])), :doc "Creates a PIXI container.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.pixi/create-container!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}, :method-params ([] [options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists ([] [options]), :doc "Creates a PIXI container."}, tile-width {:name ascii-dungeoncrawler.pixi/tile-width, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 4, :column 1, :end-line 4, :end-column 16, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 4, :column 6, :end-line 4, :end-column 16}}, remove-child! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 102, :column 7, :end-line 102, :end-column 20, :arglists (quote ([container child]))}, :name ascii-dungeoncrawler.pixi/remove-child!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 20, :method-params ([container child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container child]))}, width {:name ascii-dungeoncrawler.pixi/width, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 7, :column 6, :end-line 7, :end-column 11}}, move! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 55, :column 7, :end-line 55, :end-column 12, :arglists (quote ([object [x y]]))}, :name ascii-dungeoncrawler.pixi/move!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 12, :method-params ([object p__6116]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([object [x y]]))}, char-sprite! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 81, :column 7, :end-line 81, :end-column 19, :arglists (quote ([char] [char [x y]] [char [x y] color])), :doc "Returns a sprite created from the provided ASCII character", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([char] [char [x y]] [char [x y] color]), :arglists ([char] [char [x y]] [char [x y] color]), :arglists-meta (nil nil nil)}}, :name ascii-dungeoncrawler.pixi/char-sprite!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([char] [char [x y]] [char [x y] color]), :arglists ([char] [char [x y]] [char [x y] color]), :arglists-meta (nil nil nil)}, :method-params ([char] [char [x y]] [char [x y] color]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists ([char] [char [x y]] [char [x y] color]), :doc "Returns a sprite created from the provided ASCII character"}, create-renderer! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 28, :column 7, :end-line 28, :end-column 23, :arglists (quote ([] [options])), :doc "Creates a renderer", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}}, :name ascii-dungeoncrawler.pixi/create-renderer!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}, :method-params ([] [options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists ([] [options]), :doc "Creates a renderer"}, add-child! {:protocol-inline nil, :meta {:file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :line 96, :column 7, :end-line 96, :end-column 17, :arglists (quote ([container child]))}, :name ascii-dungeoncrawler.pixi/add-child!, :variadic false, :file "/Users/john/.boot/cache/tmp/Users/john/programmingstuff/clojurescript/ascii-dungeoncrawler/237/-rcsl8f/ascii_dungeoncrawler/pixi.cljs", :end-column 17, :method-params ([container child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container child]))}}}